<?php

abstract class VForm extends VList {
    const FormId = "";
    const ModelClass = "";
    protected $formId;
    protected $model;

    public function __construct($modelArg) {
        $this->formId = static::FormId;
        $this->model = $this->loadContext();
        $class = static::ModelClass;
        if(!$this->model) $this->model = new $class($modelArg);
    }

    public function render() {
        parent::render(); // TODO: Change the autogenerated stub
        $this->storeContext();
    }


    public function renderHeader() {
        parent::renderHeader(); // TODO: Change the autogenerated stub
        echo "<form method='post' name='$this->formId'>\n";
        echo "<input type='hidden' name='formId' value='$this->formId'/>\n";
    }

    public function renderFooter() {
        echo "</form>\n";
        parent::renderFooter(); // TODO: Change the autogenerated stub
    }


    public function buildControllers() {
        $cc = new ControllerCollection();
        $this->registerController($cc);
        return $cc;
    }

    private function storeContext() {
        $mc = new stdClass();
        $mc->model = &$this->model;
        $mc->controller = $this->buildControllers();
        $_SESSION["formContexts"][$this->formId] = serialize($mc);
    }

    private function loadContext() {
        error_log("zavolany loadContext.");
        if(isset($_POST["formId"]))
            if($_POST["formId"] == $this->formId) {
                if (isset($_SESSION["formContexts"][$this->formId])) {
                    $ctx = $_SESSION["formContexts"][$this->formId];
                    $mc = unserialize($ctx);
                    //error_log(var_export($mc, true));
                    $mc->controller->update();
                    //error_log(var_export($mc, true));
                    return $mc->model;
                }
            }
        return NULL;
    }
}