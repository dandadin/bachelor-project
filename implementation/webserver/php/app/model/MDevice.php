<?php

class MDevice extends MModel {
    public const viewClass = "VFormDevice";
    public $id;
    public $name;
    public $location;
    public $gatewayId;
    public $created;
    public $lastChanged;
    public $collections;
    private $tmpId;

    public function __construct($id) {
        if($id) {
            $sqls=DB::query("SELECT * FROM devices WHERE id=$id");
            $o=$sqls->fetchObject();
            if ($o) {
                $this->id = $o->id;
                $this->name = $o->name;
                $this->location = $o->location;
                $this->gatewayId = $o->gateway_id;
                $this->created = $o->created;
                $this->lastChanged = $o->last_changed;
            }
            $this->collections = new MRelTableCollection($id);
        }
    }

    public function store() {
        if (!parent::store()) return false; // TODO: Change the autogenerated stub
        $sql = $this->id ? "UPDATE" : "INSERT INTO";
        $sql.=" devices SET name=:name, location=:location, gateway_id=:gateway_id,"
        ." created=:created, last_changed=:last_changed";
        if ($this->id) $sql.=" WHERE id=$this->id";
        $sqls=DB::prepare($sql);
        if (!$sqls->execute(["name" => $this->name, "location" => $this->location,
            "gateway_id" => $this->gatewayId, "created" => $this->created,
            "last_changed" => $this->lastChanged]))
        {
            error_log(get_called_class().": SQL Error.");
            return false;
        }
        if (!$this->id) $this->tmpId = DB::lastInsertId();
        return true;
    }

    public function storeCommit() {
        parent::storeCommit();
        if (!$this->id) $this->id = $this->tmpId;
    }

    public function delete() {
        if (!$this->id) return TRUE;
        $sql = "DELETE FROM devices WHERE id=$this->id";
        if (FALSE===DB::exec($sql)) return FALSE;
        if (FALSE===parent::delete()) return FALSE;
        $this->tmpId = NULL;
        return TRUE;
    }

    public function clickedSubmit() {
        $this->persist();
    }


}