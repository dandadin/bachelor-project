<?php

class MRole extends MModel {
    public const viewClass = "VFormRole";
    public $id;
    public $name;
    public $canEditGroups;
    public $canEditUsers;
    private $tmpId;

    public function __construct($id) {
        if($id) {
            $sqls=DB::query("SELECT * FROM roles WHERE id=$id");
            $o=$sqls->fetchObject();
            if ($o) {
                $this->id = $o->id;
                $this->name = $o->name;
                $this->canEditGroups = $o->can_edit_groups;
                $this->canEditUsers = $o->can_edit_users;
                error_log("CEU:".var_export($this->canEditUsers,true));
            }
        }
    }

    public function store() {
        if (!parent::store()) return false; // TODO: Change the autogenerated stub
        $sql = $this->id ? "UPDATE" : "INSERT INTO";
        $sql.=" roles SET name=:name, can_edit_groups=:can_edit_groups, can_edit_users=:can_edit_users";
        if ($this->id) $sql.=" WHERE id=$this->id";
        $sqls=DB::prepare($sql);
        error_log(var_export(["name" => $this->name, "can_edit_groups" => $this->canEditGroups,
            "can_edit_users" => $this->canEditUsers], true));
        if (!$sqls->execute(["name" => $this->name, "can_edit_groups" => $this->canEditGroups,
            "can_edit_users" => $this->canEditUsers]))
        {
            error_log(get_called_class().": SQL Error.");
            return false;
        }
        if (!$this->id) $this->tmpId = DB::lastInsertId();
        return true;
    }

    public function storeCommit() {
        parent::storeCommit();
        if (!$this->id) $this->id = $this->tmpId;
    }

    public function delete() {
        if (!$this->id) return TRUE;
        $sql = "DELETE FROM roles WHERE id=$this->id";
        if (FALSE===DB::exec($sql)) return FALSE;
        if (FALSE===parent::delete()) return FALSE;
        $this->tmpId = NULL;
        return TRUE;
    }

    public function clickedSubmit() {
        $this->persist();
    }


}